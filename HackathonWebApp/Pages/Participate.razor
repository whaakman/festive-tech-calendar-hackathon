@page "/participate"

@using WebAppHackathon.Data;

<center>
    <h1> 🎄 Festive Tech Calendar Hackathon</h1>
</center>
<br><br>
<p>As mentioned on the introduction page, any technology goes! Just input the required information in the form and your
submission is on its way! We just ask you to follow these rules for submission:</p>
<li>Solution is hosted in a GitHub repository</li>
<li>Repository contains a README.MD with a write up of your solution or a link to a blog post containing the write up. </li>
<li>Solution can be recreated by the reviewers</li>
<br>
<p>You can use any technology you want as long as it runs on Microsoft Azure. It doesn’t matter if your deployment is based on ARM Templates, Azure CLI, Terraform or Power Platform. You can use and combine any technology that you want. If you want to repackage the whole thing in a container, that’s also fine! </p>
<br />
<p>Submissions must be entered before <strong>DATE</strong>.</p>
<p>Don't forget the <a href="requirements" target="blank" class="red">requirements</a>.</p>
<p>Remember, we’re not looking for code changes in the website itself. Santa is perfectly fine with deploying resources for each country as long as it doesn’t happen manually and turn into a repetitive point and click adventure in the Azure Portal.</p>
<br><br>
<div id="parent">
  <div id="wide">

@if (submitted == false)
        {

            <EditForm Model="@signupModel" OnValidSubmit="@OnSubmit">

                <DataAnnotationsValidator />
                <ValidationSummary />

                <label>Name</label><br />
                <InputText id="name" @bind-Value="signupModel.Name" /><br />
                <label>Twitter</label><br />
                <InputText id="twitteraccount" @bind-Value="signupModel.TwitterAccount" /><br />
                <label>Email</label><br />
                <InputText id="email" @bind-Value="signupModel.Email" /><br />
                <label>Solution URI</label><br />
                <InputText id="solutionuri" @bind-Value="signupModel.SolutionUri" /><br />
<br />
                <button type="submit" disabled=@isSubmitting>Submit</button>
            </EditForm>

            <br />
        }
        else
        {
            <h4>@submitMessage</h4>
        }
        </div>

<div id="narrow">
        <div class="window">
            <div class="santa">
                <div class="head">
                    <div class="face">
                        <div class="redhat">
                            <div class="whitepart"></div>
                            <div class="redpart"></div>
                            <div class="hatball"></div>
                        </div>
                        <div class="eyes"></div>
                        <div class="beard">
                            <div class="nouse"></div>
                            <div class="mouth"></div>
                        </div>
                    </div>
                    <div class="ears"></div>
                </div>
                <div class="body"></div>
            </div>
        </div>
        <div class="message"></div>
        <br />
        <br />
        
    </div>
    
</div>



@code {
    private bool submitted = false;
    private bool isSubmitting;
    private string submitMessage;
    private SignupModel signupModel = new SignupModel();
    private QueueManager queueManager = new QueueManager();

    async Task OnSubmit()
    {
        if (isSubmitting)
            return;

        isSubmitting = true;
        try
        {
            await Task.Delay(1000); // TODO do actual work here
            queueManager.InsertMessage(signupModel);
            submitMessage = "Ho-Ho-Ho! Thank you for participating! Your submission has been shared with the reviewers. We will get back to you shortly!";
        }
        finally
        {
            isSubmitting = false;
            submitted = true;
        }
    }


}